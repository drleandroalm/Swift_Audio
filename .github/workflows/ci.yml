name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  macos-tests:
    name: macOS Unit Tests (ARM64)
    runs-on: macos-26
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true  # Enable Git LFS for audio files and model binaries

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Check Xcode Version Compatibility
        id: xcode-check
        run: |
          XCODE_VERSION=$(xcodebuild -version 2>/dev/null | awk 'NR==1{print $2}')
          MAJOR_VERSION=$(echo $XCODE_VERSION | cut -d. -f1)

          echo "xcode_version=$XCODE_VERSION" >> $GITHUB_OUTPUT
          echo "xcode_major=$MAJOR_VERSION" >> $GITHUB_OUTPUT

          if [ "$MAJOR_VERSION" -lt 26 ]; then
            echo "⚠️  Xcode $XCODE_VERSION detected (requires Xcode 26+)"
            echo "Skipping tests until GitHub Actions supports Xcode 26 beta"
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Xcode $XCODE_VERSION detected (compatible)"
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip Notice
        if: steps.xcode-check.outputs.should_skip == 'true'
        run: |
          echo "::notice title=Tests Skipped (Xcode 26 Required)::This project requires Xcode 26+ (iOS 26/macOS 26). GitHub Actions currently provides Xcode ${{ steps.xcode-check.outputs.xcode_version }}. Tests will run automatically when Xcode 26 becomes available on GitHub-hosted runners."

      - name: Run macOS unit tests (arm64)
        if: steps.xcode-check.outputs.should_skip == 'false'
        run: |
          xcodebuild -scheme SwiftScribe -destination 'platform=macOS,arch=arm64' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            test | xcpretty || exit 1

  ios-verify-models:
    name: iOS Model Verification (Simulator)
    runs-on: macos-26
    needs: macos-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true  # Enable Git LFS for audio files and model binaries

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Check Xcode Version Compatibility
        id: xcode-check
        run: |
          XCODE_VERSION=$(xcodebuild -version 2>/dev/null | awk 'NR==1{print $2}')
          MAJOR_VERSION=$(echo $XCODE_VERSION | cut -d. -f1)

          echo "xcode_version=$XCODE_VERSION" >> $GITHUB_OUTPUT
          echo "xcode_major=$MAJOR_VERSION" >> $GITHUB_OUTPUT

          if [ "$MAJOR_VERSION" -lt 26 ]; then
            echo "⚠️  Xcode $XCODE_VERSION detected (requires Xcode 26+)"
            echo "Skipping tests until GitHub Actions supports Xcode 26 beta"
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Xcode $XCODE_VERSION detected (compatible)"
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip Notice
        if: steps.xcode-check.outputs.should_skip == 'true'
        run: |
          echo "::notice title=Tests Skipped (Xcode 26 Required)::This project requires Xcode 26+ (iOS 26/macOS 26). GitHub Actions currently provides Xcode ${{ steps.xcode-check.outputs.xcode_version }}. Tests will run automatically when Xcode 26 becomes available on GitHub-hosted runners."

      - name: Verify bundled models (macOS + iOS) and run iOS bundling test
        if: steps.xcode-check.outputs.should_skip == 'false'
        env:
          CODE_SIGN_IDENTITY: ""
          CODE_SIGNING_REQUIRED: "NO"
          CODE_SIGNING_ALLOWED: "NO"
        run: |
          bash Scripts/verify_bundled_models.sh

  cli-smoke:
    name: CLI Smoke (Deterministic)
    runs-on: macos-26
    needs: macos-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true  # Enable Git LFS for audio files and model binaries

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Check Xcode Version Compatibility
        id: xcode-check
        run: |
          XCODE_VERSION=$(xcodebuild -version 2>/dev/null | awk 'NR==1{print $2}')
          MAJOR_VERSION=$(echo $XCODE_VERSION | cut -d. -f1)

          echo "xcode_version=$XCODE_VERSION" >> $GITHUB_OUTPUT
          echo "xcode_major=$MAJOR_VERSION" >> $GITHUB_OUTPUT

          if [ "$MAJOR_VERSION" -lt 26 ]; then
            echo "⚠️  Xcode $XCODE_VERSION detected (requires Xcode 26+)"
            echo "Skipping tests until GitHub Actions supports Xcode 26 beta"
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Xcode $XCODE_VERSION detected (compatible)"
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip Notice
        if: steps.xcode-check.outputs.should_skip == 'true'
        run: |
          echo "::notice title=Tests Skipped (Xcode 26 Required)::This project requires Xcode 26+ (iOS 26/macOS 26). GitHub Actions currently provides Xcode ${{ steps.xcode-check.outputs.xcode_version }}. Tests will run automatically when Xcode 26 becomes available on GitHub-hosted runners."

      - name: Run RecorderSmokeCLI on reference WAV
        if: steps.xcode-check.outputs.should_skip == 'false'
        run: |
          set -euo pipefail
          xcrun swift --version
          test -f Audio_Files_Tests/Audio_One_Speaker_Test.wav
          Scripts/RecorderSmokeCLI/run_cli.sh Audio_Files_Tests/Audio_One_Speaker_Test.wav | tee /tmp/cli_smoke.log
          # Basic sanity: ensure at least one volatile or final line appeared
          if ! (grep -q "\[CLI\]\[volatile\]" /tmp/cli_smoke.log || grep -q "\[CLI\]\[final\]" /tmp/cli_smoke.log); then
            echo "No CLI transcript lines observed" >&2
            exit 2
          fi
