program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3500.14.1"}, {"coremlc-version", "3500.32.1"}, {"coremltools-component-torch", "2.8.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "9.0b1"}})]
{
    func main<ios17>(tensor<fp32, [1, 1, 80000]> audio) {
            tensor<fp32, [1, 400]> _fbank_window = const()[name = tensor<string, []>("_fbank_window"), val = tensor<fp32, [1, 400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp32, []> _fbank_eps = const()[name = tensor<string, []>("_fbank_eps"), val = tensor<fp32, []>(0x1.b7cdfep-34)];
            tensor<fp32, [400, 1, 400]> _fbank_frame_kernel = const()[name = tensor<string, []>("_fbank_frame_kernel"), val = tensor<fp32, [400, 1, 400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1728)))];
            tensor<fp32, [256]> resnet_seg_1_bias = const()[name = tensor<string, []>("resnet_seg_1_bias"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(641792)))];
            tensor<fp32, [256, 5120]> resnet_seg_1_weight = const()[name = tensor<string, []>("resnet_seg_1_weight"), val = tensor<fp32, [256, 5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(642880)))];
            tensor<fp32, []> var_4_promoted = const()[name = tensor<string, []>("op_4_promoted"), val = tensor<fp32, []>(0x1p+15)];
            tensor<fp32, [1, 1, 80000]> waveforms_3 = mul(x = audio, y = var_4_promoted)[name = tensor<string, []>("waveforms_3")];
            tensor<string, []> frames_1_pad_type_0 = const()[name = tensor<string, []>("frames_1_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [1]> frames_1_strides_0 = const()[name = tensor<string, []>("frames_1_strides_0"), val = tensor<int32, [1]>([160])];
            tensor<int32, [2]> frames_1_pad_0 = const()[name = tensor<string, []>("frames_1_pad_0"), val = tensor<int32, [2]>([0, 0])];
            tensor<int32, [1]> frames_1_dilations_0 = const()[name = tensor<string, []>("frames_1_dilations_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, []> frames_1_groups_0 = const()[name = tensor<string, []>("frames_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [1, 400, 498]> frames_1 = conv(dilations = frames_1_dilations_0, groups = frames_1_groups_0, pad = frames_1_pad_0, pad_type = frames_1_pad_type_0, strides = frames_1_strides_0, weight = _fbank_frame_kernel, x = waveforms_3)[name = tensor<string, []>("frames_1")];
            tensor<int32, [1]> var_44_axes_0 = const()[name = tensor<string, []>("op_44_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp32, [400, 498]> var_44 = squeeze(axes = var_44_axes_0, x = frames_1)[name = tensor<string, []>("op_44")];
            tensor<int32, [2]> frames_3_perm_0 = const()[name = tensor<string, []>("frames_3_perm_0"), val = tensor<int32, [2]>([1, 0])];
            tensor<int32, [1]> var_47_axes_0 = const()[name = tensor<string, []>("op_47_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_47_keep_dims_0 = const()[name = tensor<string, []>("op_47_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp32, [498, 400]> frames_3 = transpose(perm = frames_3_perm_0, x = var_44)[name = tensor<string, []>("transpose_4")];
            tensor<fp32, [498, 1]> var_47 = reduce_mean(axes = var_47_axes_0, keep_dims = var_47_keep_dims_0, x = frames_3)[name = tensor<string, []>("op_47")];
            tensor<fp32, [498, 400]> frames_5 = sub(x = frames_3, y = var_47)[name = tensor<string, []>("frames_5")];
            tensor<int32, [1]> input_1_axes_0 = const()[name = tensor<string, []>("input_1_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp32, [498, 1, 400]> input_1 = expand_dims(axes = input_1_axes_0, x = frames_5)[name = tensor<string, []>("input_1")];
            tensor<fp32, []> const_0 = const()[name = tensor<string, []>("const_0"), val = tensor<fp32, []>(0x0p+0)];
            tensor<int32, [6]> var_51_pad_0 = const()[name = tensor<string, []>("op_51_pad_0"), val = tensor<int32, [6]>([0, 0, 0, 0, 1, 0])];
            tensor<string, []> var_51_mode_0 = const()[name = tensor<string, []>("op_51_mode_0"), val = tensor<string, []>("replicate")];
            tensor<fp32, [498, 1, 401]> var_51 = pad(constant_val = const_0, mode = var_51_mode_0, pad = var_51_pad_0, x = input_1)[name = tensor<string, []>("op_51")];
            tensor<int32, [1]> padded_axes_0 = const()[name = tensor<string, []>("padded_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp32, [498, 401]> padded = squeeze(axes = padded_axes_0, x = var_51)[name = tensor<string, []>("padded")];
            tensor<int32, [2]> var_54_begin_0 = const()[name = tensor<string, []>("op_54_begin_0"), val = tensor<int32, [2]>([0, 0])];
            tensor<int32, [2]> var_54_end_0 = const()[name = tensor<string, []>("op_54_end_0"), val = tensor<int32, [2]>([498, 400])];
            tensor<bool, [2]> var_54_end_mask_0 = const()[name = tensor<string, []>("op_54_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<fp32, [498, 400]> var_54 = slice_by_index(begin = var_54_begin_0, end = var_54_end_0, end_mask = var_54_end_mask_0, x = padded)[name = tensor<string, []>("op_54")];
            tensor<fp32, []> var_55 = const()[name = tensor<string, []>("op_55"), val = tensor<fp32, []>(0x1.f0a3d8p-1)];
            tensor<fp32, [498, 400]> var_56 = mul(x = var_54, y = var_55)[name = tensor<string, []>("op_56")];
            tensor<fp32, [498, 400]> frames_7 = sub(x = frames_5, y = var_56)[name = tensor<string, []>("frames_7")];
            tensor<fp32, [498, 400]> frames_9 = mul(x = frames_7, y = _fbank_window)[name = tensor<string, []>("frames_9")];
            tensor<int32, [1]> input_3_axes_0 = const()[name = tensor<string, []>("input_3_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp32, [498, 1, 400]> input_3 = expand_dims(axes = input_3_axes_0, x = frames_9)[name = tensor<string, []>("input_3")];
            tensor<fp32, []> const_1 = const()[name = tensor<string, []>("const_1"), val = tensor<fp32, []>(0x0p+0)];
            tensor<int32, [6]> var_61_pad_0 = const()[name = tensor<string, []>("op_61_pad_0"), val = tensor<int32, [6]>([0, 0, 0, 0, 0, 112])];
            tensor<string, []> var_61_mode_0 = const()[name = tensor<string, []>("op_61_mode_0"), val = tensor<string, []>("constant")];
            tensor<fp32, [498, 1, 512]> var_61 = pad(constant_val = const_1, mode = var_61_mode_0, pad = var_61_pad_0, x = input_3)[name = tensor<string, []>("op_61")];
            tensor<int32, [1]> frames_11_axes_0 = const()[name = tensor<string, []>("frames_11_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp32, [498, 512]> frames_11 = squeeze(axes = frames_11_axes_0, x = var_61)[name = tensor<string, []>("frames_11")];
            tensor<fp32, [257, 512]> transpose_0 = const()[name = tensor<string, []>("transpose_0"), val = tensor<fp32, [257, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5885824)))];
            tensor<fp32, [257]> real_bias_0 = const()[name = tensor<string, []>("real_bias_0"), val = tensor<fp32, [257]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6412224)))];
            tensor<fp32, [498, 257]> real = linear(bias = real_bias_0, weight = transpose_0, x = frames_11)[name = tensor<string, []>("real")];
            tensor<fp32, [257, 512]> transpose_1 = const()[name = tensor<string, []>("transpose_1"), val = tensor<fp32, [257, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6413376)))];
            tensor<fp32, [498, 257]> imag = linear(bias = real_bias_0, weight = transpose_1, x = frames_11)[name = tensor<string, []>("imag")];
            tensor<fp32, []> var_17_promoted = const()[name = tensor<string, []>("op_17_promoted"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, [498, 257]> var_65 = pow(x = real, y = var_17_promoted)[name = tensor<string, []>("op_65")];
            tensor<fp32, []> var_17_promoted_1 = const()[name = tensor<string, []>("op_17_promoted_1"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, [498, 257]> var_66 = pow(x = imag, y = var_17_promoted_1)[name = tensor<string, []>("op_66")];
            tensor<fp32, [498, 257]> power = add(x = var_65, y = var_66)[name = tensor<string, []>("power")];
            tensor<fp32, [80, 257]> transpose_2 = const()[name = tensor<string, []>("transpose_2"), val = tensor<fp32, [80, 257]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6939776)))];
            tensor<fp32, [80]> mel_bias_0 = const()[name = tensor<string, []>("mel_bias_0"), val = tensor<fp32, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7022080)))];
            tensor<fp32, [498, 80]> mel = linear(bias = mel_bias_0, weight = transpose_2, x = power)[name = tensor<string, []>("mel")];
            tensor<fp32, []> const_2 = const()[name = tensor<string, []>("const_2"), val = tensor<fp32, []>(0x1.fffffep+127)];
            tensor<fp32, [498, 80]> clip_0 = clip(alpha = _fbank_eps, beta = const_2, x = mel)[name = tensor<string, []>("clip_0")];
            tensor<fp32, []> var_70_epsilon_0 = const()[name = tensor<string, []>("op_70_epsilon_0"), val = tensor<fp32, []>(0x1p-149)];
            tensor<fp32, [498, 80]> var_70 = log(epsilon = var_70_epsilon_0, x = clip_0)[name = tensor<string, []>("op_70")];
            tensor<int32, [1]> var_73_axes_0 = const()[name = tensor<string, []>("op_73_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp32, [1, 498, 80]> var_73 = expand_dims(axes = var_73_axes_0, x = var_70)[name = tensor<string, []>("op_73")];
            tensor<int32, [1]> centered_1_axes_0 = const()[name = tensor<string, []>("centered_1_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> centered_1_keep_dims_0 = const()[name = tensor<string, []>("centered_1_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp32, [1, 1, 80]> centered_1 = reduce_mean(axes = centered_1_axes_0, keep_dims = centered_1_keep_dims_0, x = var_73)[name = tensor<string, []>("centered_1")];
            tensor<fp32, [1, 498, 80]> fbank_1 = sub(x = var_73, y = centered_1)[name = tensor<string, []>("fbank_1")];
            tensor<int32, []> var_90 = const()[name = tensor<string, []>("op_90"), val = tensor<int32, []>(-1)];
            tensor<fp32, []> var_93 = const()[name = tensor<string, []>("op_93"), val = tensor<fp32, []>(0x1.197998p-40)];
            tensor<int32, [3]> var_109 = const()[name = tensor<string, []>("op_109"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<int32, [1]> input_5_axes_0 = const()[name = tensor<string, []>("input_5_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp32, [1, 80, 498]> fbank = transpose(perm = var_109, x = fbank_1)[name = tensor<string, []>("transpose_3")];
            tensor<fp32, [1, 1, 80, 498]> input_5 = expand_dims(axes = input_5_axes_0, x = fbank)[name = tensor<string, []>("input_5")];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_7_strides_0 = const()[name = tensor<string, []>("input_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_7_dilations_0 = const()[name = tensor<string, []>("input_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_7_groups_0 = const()[name = tensor<string, []>("input_7_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [32, 1, 3, 3]> const_9 = const()[name = tensor<string, []>("const_9"), val = tensor<fp32, [32, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7022464)))];
            tensor<fp32, [32]> const_10 = const()[name = tensor<string, []>("const_10"), val = tensor<fp32, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7023680)))];
            tensor<fp32, [1, 32, 80, 498]> input_9 = conv(bias = const_10, dilations = input_7_dilations_0, groups = input_7_groups_0, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = input_7_strides_0, weight = const_9, x = input_5)[name = tensor<string, []>("input_9")];
            tensor<fp32, [1, 32, 80, 498]> input_11 = relu(x = input_9)[name = tensor<string, []>("input_11")];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_13_strides_0 = const()[name = tensor<string, []>("input_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_13_dilations_0 = const()[name = tensor<string, []>("input_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_13_groups_0 = const()[name = tensor<string, []>("input_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [32, 32, 3, 3]> const_11 = const()[name = tensor<string, []>("const_11"), val = tensor<fp32, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7023872)))];
            tensor<fp32, [32]> const_12 = const()[name = tensor<string, []>("const_12"), val = tensor<fp32, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7060800)))];
            tensor<fp32, [1, 32, 80, 498]> input_15 = conv(bias = const_12, dilations = input_13_dilations_0, groups = input_13_groups_0, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = input_13_strides_0, weight = const_11, x = input_11)[name = tensor<string, []>("input_15")];
            tensor<fp32, [1, 32, 80, 498]> input_17 = relu(x = input_15)[name = tensor<string, []>("input_17")];
            tensor<string, []> input_19_pad_type_0 = const()[name = tensor<string, []>("input_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_19_pad_0 = const()[name = tensor<string, []>("input_19_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_19_strides_0 = const()[name = tensor<string, []>("input_19_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_19_dilations_0 = const()[name = tensor<string, []>("input_19_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_19_groups_0 = const()[name = tensor<string, []>("input_19_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [32, 32, 3, 3]> const_13 = const()[name = tensor<string, []>("const_13"), val = tensor<fp32, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7060992)))];
            tensor<fp32, [32]> const_14 = const()[name = tensor<string, []>("const_14"), val = tensor<fp32, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7097920)))];
            tensor<fp32, [1, 32, 80, 498]> out_1 = conv(bias = const_14, dilations = input_19_dilations_0, groups = input_19_groups_0, pad = input_19_pad_0, pad_type = input_19_pad_type_0, strides = input_19_strides_0, weight = const_13, x = input_17)[name = tensor<string, []>("out_1")];
            tensor<fp32, [1, 32, 80, 498]> input_21 = add(x = out_1, y = input_11)[name = tensor<string, []>("input_21")];
            tensor<fp32, [1, 32, 80, 498]> input_23 = relu(x = input_21)[name = tensor<string, []>("input_23")];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_25_strides_0 = const()[name = tensor<string, []>("input_25_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_25_dilations_0 = const()[name = tensor<string, []>("input_25_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_25_groups_0 = const()[name = tensor<string, []>("input_25_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [32, 32, 3, 3]> const_15 = const()[name = tensor<string, []>("const_15"), val = tensor<fp32, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7098112)))];
            tensor<fp32, [32]> const_16 = const()[name = tensor<string, []>("const_16"), val = tensor<fp32, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7135040)))];
            tensor<fp32, [1, 32, 80, 498]> input_27 = conv(bias = const_16, dilations = input_25_dilations_0, groups = input_25_groups_0, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = input_25_strides_0, weight = const_15, x = input_23)[name = tensor<string, []>("input_27")];
            tensor<fp32, [1, 32, 80, 498]> input_29 = relu(x = input_27)[name = tensor<string, []>("input_29")];
            tensor<string, []> input_31_pad_type_0 = const()[name = tensor<string, []>("input_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_31_pad_0 = const()[name = tensor<string, []>("input_31_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_31_strides_0 = const()[name = tensor<string, []>("input_31_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_31_dilations_0 = const()[name = tensor<string, []>("input_31_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_31_groups_0 = const()[name = tensor<string, []>("input_31_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [32, 32, 3, 3]> const_17 = const()[name = tensor<string, []>("const_17"), val = tensor<fp32, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7135232)))];
            tensor<fp32, [32]> const_18 = const()[name = tensor<string, []>("const_18"), val = tensor<fp32, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7172160)))];
            tensor<fp32, [1, 32, 80, 498]> out_3 = conv(bias = const_18, dilations = input_31_dilations_0, groups = input_31_groups_0, pad = input_31_pad_0, pad_type = input_31_pad_type_0, strides = input_31_strides_0, weight = const_17, x = input_29)[name = tensor<string, []>("out_3")];
            tensor<fp32, [1, 32, 80, 498]> input_33 = add(x = out_3, y = input_23)[name = tensor<string, []>("input_33")];
            tensor<fp32, [1, 32, 80, 498]> input_35 = relu(x = input_33)[name = tensor<string, []>("input_35")];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_37_strides_0 = const()[name = tensor<string, []>("input_37_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_37_dilations_0 = const()[name = tensor<string, []>("input_37_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_37_groups_0 = const()[name = tensor<string, []>("input_37_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [32, 32, 3, 3]> const_19 = const()[name = tensor<string, []>("const_19"), val = tensor<fp32, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7172352)))];
            tensor<fp32, [32]> const_20 = const()[name = tensor<string, []>("const_20"), val = tensor<fp32, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7209280)))];
            tensor<fp32, [1, 32, 80, 498]> input_39 = conv(bias = const_20, dilations = input_37_dilations_0, groups = input_37_groups_0, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = input_37_strides_0, weight = const_19, x = input_35)[name = tensor<string, []>("input_39")];
            tensor<fp32, [1, 32, 80, 498]> input_41 = relu(x = input_39)[name = tensor<string, []>("input_41")];
            tensor<string, []> input_43_pad_type_0 = const()[name = tensor<string, []>("input_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_43_pad_0 = const()[name = tensor<string, []>("input_43_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_43_strides_0 = const()[name = tensor<string, []>("input_43_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_43_dilations_0 = const()[name = tensor<string, []>("input_43_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_43_groups_0 = const()[name = tensor<string, []>("input_43_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [32, 32, 3, 3]> const_21 = const()[name = tensor<string, []>("const_21"), val = tensor<fp32, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7209472)))];
            tensor<fp32, [32]> const_22 = const()[name = tensor<string, []>("const_22"), val = tensor<fp32, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7246400)))];
            tensor<fp32, [1, 32, 80, 498]> out_5 = conv(bias = const_22, dilations = input_43_dilations_0, groups = input_43_groups_0, pad = input_43_pad_0, pad_type = input_43_pad_type_0, strides = input_43_strides_0, weight = const_21, x = input_41)[name = tensor<string, []>("out_5")];
            tensor<fp32, [1, 32, 80, 498]> input_45 = add(x = out_5, y = input_35)[name = tensor<string, []>("input_45")];
            tensor<fp32, [1, 32, 80, 498]> input_47 = relu(x = input_45)[name = tensor<string, []>("input_47")];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_49_strides_0 = const()[name = tensor<string, []>("input_49_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_49_dilations_0 = const()[name = tensor<string, []>("input_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_49_groups_0 = const()[name = tensor<string, []>("input_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 32, 3, 3]> const_23 = const()[name = tensor<string, []>("const_23"), val = tensor<fp32, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7246592)))];
            tensor<fp32, [64]> const_24 = const()[name = tensor<string, []>("const_24"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7320384)))];
            tensor<fp32, [1, 64, 40, 249]> input_51 = conv(bias = const_24, dilations = input_49_dilations_0, groups = input_49_groups_0, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = input_49_strides_0, weight = const_23, x = input_47)[name = tensor<string, []>("input_51")];
            tensor<fp32, [1, 64, 40, 249]> input_53 = relu(x = input_51)[name = tensor<string, []>("input_53")];
            tensor<string, []> input_55_pad_type_0 = const()[name = tensor<string, []>("input_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_55_pad_0 = const()[name = tensor<string, []>("input_55_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_55_strides_0 = const()[name = tensor<string, []>("input_55_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_55_dilations_0 = const()[name = tensor<string, []>("input_55_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_55_groups_0 = const()[name = tensor<string, []>("input_55_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 64, 3, 3]> const_25 = const()[name = tensor<string, []>("const_25"), val = tensor<fp32, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7320704)))];
            tensor<fp32, [64]> const_26 = const()[name = tensor<string, []>("const_26"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7468224)))];
            tensor<fp32, [1, 64, 40, 249]> out_7 = conv(bias = const_26, dilations = input_55_dilations_0, groups = input_55_groups_0, pad = input_55_pad_0, pad_type = input_55_pad_type_0, strides = input_55_strides_0, weight = const_25, x = input_53)[name = tensor<string, []>("out_7")];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_57_strides_0 = const()[name = tensor<string, []>("input_57_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_57_dilations_0 = const()[name = tensor<string, []>("input_57_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_57_groups_0 = const()[name = tensor<string, []>("input_57_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 32, 1, 1]> const_27 = const()[name = tensor<string, []>("const_27"), val = tensor<fp32, [64, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7468544)))];
            tensor<fp32, [64]> const_28 = const()[name = tensor<string, []>("const_28"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7476800)))];
            tensor<fp32, [1, 64, 40, 249]> var_258 = conv(bias = const_28, dilations = input_57_dilations_0, groups = input_57_groups_0, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = input_57_strides_0, weight = const_27, x = input_47)[name = tensor<string, []>("op_258")];
            tensor<fp32, [1, 64, 40, 249]> input_59 = add(x = out_7, y = var_258)[name = tensor<string, []>("input_59")];
            tensor<fp32, [1, 64, 40, 249]> input_61 = relu(x = input_59)[name = tensor<string, []>("input_61")];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_63_strides_0 = const()[name = tensor<string, []>("input_63_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_63_dilations_0 = const()[name = tensor<string, []>("input_63_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_63_groups_0 = const()[name = tensor<string, []>("input_63_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 64, 3, 3]> const_29 = const()[name = tensor<string, []>("const_29"), val = tensor<fp32, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7477120)))];
            tensor<fp32, [64]> const_30 = const()[name = tensor<string, []>("const_30"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7624640)))];
            tensor<fp32, [1, 64, 40, 249]> input_65 = conv(bias = const_30, dilations = input_63_dilations_0, groups = input_63_groups_0, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = input_63_strides_0, weight = const_29, x = input_61)[name = tensor<string, []>("input_65")];
            tensor<fp32, [1, 64, 40, 249]> input_67 = relu(x = input_65)[name = tensor<string, []>("input_67")];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_69_strides_0 = const()[name = tensor<string, []>("input_69_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_69_dilations_0 = const()[name = tensor<string, []>("input_69_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_69_groups_0 = const()[name = tensor<string, []>("input_69_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 64, 3, 3]> const_31 = const()[name = tensor<string, []>("const_31"), val = tensor<fp32, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7624960)))];
            tensor<fp32, [64]> const_32 = const()[name = tensor<string, []>("const_32"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7772480)))];
            tensor<fp32, [1, 64, 40, 249]> out_9 = conv(bias = const_32, dilations = input_69_dilations_0, groups = input_69_groups_0, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = input_69_strides_0, weight = const_31, x = input_67)[name = tensor<string, []>("out_9")];
            tensor<fp32, [1, 64, 40, 249]> input_71 = add(x = out_9, y = input_61)[name = tensor<string, []>("input_71")];
            tensor<fp32, [1, 64, 40, 249]> input_73 = relu(x = input_71)[name = tensor<string, []>("input_73")];
            tensor<string, []> input_75_pad_type_0 = const()[name = tensor<string, []>("input_75_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_75_pad_0 = const()[name = tensor<string, []>("input_75_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_75_strides_0 = const()[name = tensor<string, []>("input_75_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_75_dilations_0 = const()[name = tensor<string, []>("input_75_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_75_groups_0 = const()[name = tensor<string, []>("input_75_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 64, 3, 3]> const_33 = const()[name = tensor<string, []>("const_33"), val = tensor<fp32, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7772800)))];
            tensor<fp32, [64]> const_34 = const()[name = tensor<string, []>("const_34"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7920320)))];
            tensor<fp32, [1, 64, 40, 249]> input_77 = conv(bias = const_34, dilations = input_75_dilations_0, groups = input_75_groups_0, pad = input_75_pad_0, pad_type = input_75_pad_type_0, strides = input_75_strides_0, weight = const_33, x = input_73)[name = tensor<string, []>("input_77")];
            tensor<fp32, [1, 64, 40, 249]> input_79 = relu(x = input_77)[name = tensor<string, []>("input_79")];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_81_strides_0 = const()[name = tensor<string, []>("input_81_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_81_dilations_0 = const()[name = tensor<string, []>("input_81_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_81_groups_0 = const()[name = tensor<string, []>("input_81_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 64, 3, 3]> const_35 = const()[name = tensor<string, []>("const_35"), val = tensor<fp32, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7920640)))];
            tensor<fp32, [64]> const_36 = const()[name = tensor<string, []>("const_36"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8068160)))];
            tensor<fp32, [1, 64, 40, 249]> out_11 = conv(bias = const_36, dilations = input_81_dilations_0, groups = input_81_groups_0, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = input_81_strides_0, weight = const_35, x = input_79)[name = tensor<string, []>("out_11")];
            tensor<fp32, [1, 64, 40, 249]> input_83 = add(x = out_11, y = input_73)[name = tensor<string, []>("input_83")];
            tensor<fp32, [1, 64, 40, 249]> input_85 = relu(x = input_83)[name = tensor<string, []>("input_85")];
            tensor<string, []> input_87_pad_type_0 = const()[name = tensor<string, []>("input_87_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_87_pad_0 = const()[name = tensor<string, []>("input_87_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_87_strides_0 = const()[name = tensor<string, []>("input_87_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_87_dilations_0 = const()[name = tensor<string, []>("input_87_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_87_groups_0 = const()[name = tensor<string, []>("input_87_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 64, 3, 3]> const_37 = const()[name = tensor<string, []>("const_37"), val = tensor<fp32, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8068480)))];
            tensor<fp32, [64]> const_38 = const()[name = tensor<string, []>("const_38"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8216000)))];
            tensor<fp32, [1, 64, 40, 249]> input_89 = conv(bias = const_38, dilations = input_87_dilations_0, groups = input_87_groups_0, pad = input_87_pad_0, pad_type = input_87_pad_type_0, strides = input_87_strides_0, weight = const_37, x = input_85)[name = tensor<string, []>("input_89")];
            tensor<fp32, [1, 64, 40, 249]> input_91 = relu(x = input_89)[name = tensor<string, []>("input_91")];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_93_strides_0 = const()[name = tensor<string, []>("input_93_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_93_dilations_0 = const()[name = tensor<string, []>("input_93_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_93_groups_0 = const()[name = tensor<string, []>("input_93_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [64, 64, 3, 3]> const_39 = const()[name = tensor<string, []>("const_39"), val = tensor<fp32, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8216320)))];
            tensor<fp32, [64]> const_40 = const()[name = tensor<string, []>("const_40"), val = tensor<fp32, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8363840)))];
            tensor<fp32, [1, 64, 40, 249]> out_13 = conv(bias = const_40, dilations = input_93_dilations_0, groups = input_93_groups_0, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = input_93_strides_0, weight = const_39, x = input_91)[name = tensor<string, []>("out_13")];
            tensor<fp32, [1, 64, 40, 249]> input_95 = add(x = out_13, y = input_85)[name = tensor<string, []>("input_95")];
            tensor<fp32, [1, 64, 40, 249]> input_97 = relu(x = input_95)[name = tensor<string, []>("input_97")];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_99_strides_0 = const()[name = tensor<string, []>("input_99_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_99_dilations_0 = const()[name = tensor<string, []>("input_99_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_99_groups_0 = const()[name = tensor<string, []>("input_99_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 64, 3, 3]> const_41 = const()[name = tensor<string, []>("const_41"), val = tensor<fp32, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8364160)))];
            tensor<fp32, [128]> const_42 = const()[name = tensor<string, []>("const_42"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8659136)))];
            tensor<fp32, [1, 128, 20, 125]> input_101 = conv(bias = const_42, dilations = input_99_dilations_0, groups = input_99_groups_0, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = input_99_strides_0, weight = const_41, x = input_97)[name = tensor<string, []>("input_101")];
            tensor<fp32, [1, 128, 20, 125]> input_103 = relu(x = input_101)[name = tensor<string, []>("input_103")];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_105_strides_0 = const()[name = tensor<string, []>("input_105_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_105_dilations_0 = const()[name = tensor<string, []>("input_105_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_105_groups_0 = const()[name = tensor<string, []>("input_105_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_43 = const()[name = tensor<string, []>("const_43"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8659712)))];
            tensor<fp32, [128]> const_44 = const()[name = tensor<string, []>("const_44"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9249600)))];
            tensor<fp32, [1, 128, 20, 125]> out_15 = conv(bias = const_44, dilations = input_105_dilations_0, groups = input_105_groups_0, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = input_105_strides_0, weight = const_43, x = input_103)[name = tensor<string, []>("out_15")];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_107_strides_0 = const()[name = tensor<string, []>("input_107_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_107_dilations_0 = const()[name = tensor<string, []>("input_107_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_107_groups_0 = const()[name = tensor<string, []>("input_107_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 64, 1, 1]> const_45 = const()[name = tensor<string, []>("const_45"), val = tensor<fp32, [128, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9250176)))];
            tensor<fp32, [128]> const_46 = const()[name = tensor<string, []>("const_46"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9283008)))];
            tensor<fp32, [1, 128, 20, 125]> var_394 = conv(bias = const_46, dilations = input_107_dilations_0, groups = input_107_groups_0, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = input_107_strides_0, weight = const_45, x = input_97)[name = tensor<string, []>("op_394")];
            tensor<fp32, [1, 128, 20, 125]> input_109 = add(x = out_15, y = var_394)[name = tensor<string, []>("input_109")];
            tensor<fp32, [1, 128, 20, 125]> input_111 = relu(x = input_109)[name = tensor<string, []>("input_111")];
            tensor<string, []> input_113_pad_type_0 = const()[name = tensor<string, []>("input_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_113_pad_0 = const()[name = tensor<string, []>("input_113_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_113_strides_0 = const()[name = tensor<string, []>("input_113_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_113_dilations_0 = const()[name = tensor<string, []>("input_113_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_113_groups_0 = const()[name = tensor<string, []>("input_113_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_47 = const()[name = tensor<string, []>("const_47"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9283584)))];
            tensor<fp32, [128]> const_48 = const()[name = tensor<string, []>("const_48"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9873472)))];
            tensor<fp32, [1, 128, 20, 125]> input_115 = conv(bias = const_48, dilations = input_113_dilations_0, groups = input_113_groups_0, pad = input_113_pad_0, pad_type = input_113_pad_type_0, strides = input_113_strides_0, weight = const_47, x = input_111)[name = tensor<string, []>("input_115")];
            tensor<fp32, [1, 128, 20, 125]> input_117 = relu(x = input_115)[name = tensor<string, []>("input_117")];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_119_strides_0 = const()[name = tensor<string, []>("input_119_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_119_dilations_0 = const()[name = tensor<string, []>("input_119_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_119_groups_0 = const()[name = tensor<string, []>("input_119_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_49 = const()[name = tensor<string, []>("const_49"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9874048)))];
            tensor<fp32, [128]> const_50 = const()[name = tensor<string, []>("const_50"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10463936)))];
            tensor<fp32, [1, 128, 20, 125]> out_17 = conv(bias = const_50, dilations = input_119_dilations_0, groups = input_119_groups_0, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = input_119_strides_0, weight = const_49, x = input_117)[name = tensor<string, []>("out_17")];
            tensor<fp32, [1, 128, 20, 125]> input_121 = add(x = out_17, y = input_111)[name = tensor<string, []>("input_121")];
            tensor<fp32, [1, 128, 20, 125]> input_123 = relu(x = input_121)[name = tensor<string, []>("input_123")];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_125_strides_0 = const()[name = tensor<string, []>("input_125_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_125_dilations_0 = const()[name = tensor<string, []>("input_125_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_125_groups_0 = const()[name = tensor<string, []>("input_125_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_51 = const()[name = tensor<string, []>("const_51"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10464512)))];
            tensor<fp32, [128]> const_52 = const()[name = tensor<string, []>("const_52"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11054400)))];
            tensor<fp32, [1, 128, 20, 125]> input_127 = conv(bias = const_52, dilations = input_125_dilations_0, groups = input_125_groups_0, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = input_125_strides_0, weight = const_51, x = input_123)[name = tensor<string, []>("input_127")];
            tensor<fp32, [1, 128, 20, 125]> input_129 = relu(x = input_127)[name = tensor<string, []>("input_129")];
            tensor<string, []> input_131_pad_type_0 = const()[name = tensor<string, []>("input_131_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_131_pad_0 = const()[name = tensor<string, []>("input_131_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_131_strides_0 = const()[name = tensor<string, []>("input_131_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_131_dilations_0 = const()[name = tensor<string, []>("input_131_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_131_groups_0 = const()[name = tensor<string, []>("input_131_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_53 = const()[name = tensor<string, []>("const_53"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11054976)))];
            tensor<fp32, [128]> const_54 = const()[name = tensor<string, []>("const_54"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11644864)))];
            tensor<fp32, [1, 128, 20, 125]> out_19 = conv(bias = const_54, dilations = input_131_dilations_0, groups = input_131_groups_0, pad = input_131_pad_0, pad_type = input_131_pad_type_0, strides = input_131_strides_0, weight = const_53, x = input_129)[name = tensor<string, []>("out_19")];
            tensor<fp32, [1, 128, 20, 125]> input_133 = add(x = out_19, y = input_123)[name = tensor<string, []>("input_133")];
            tensor<fp32, [1, 128, 20, 125]> input_135 = relu(x = input_133)[name = tensor<string, []>("input_135")];
            tensor<string, []> input_137_pad_type_0 = const()[name = tensor<string, []>("input_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_137_pad_0 = const()[name = tensor<string, []>("input_137_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_137_strides_0 = const()[name = tensor<string, []>("input_137_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_137_dilations_0 = const()[name = tensor<string, []>("input_137_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_137_groups_0 = const()[name = tensor<string, []>("input_137_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_55 = const()[name = tensor<string, []>("const_55"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11645440)))];
            tensor<fp32, [128]> const_56 = const()[name = tensor<string, []>("const_56"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12235328)))];
            tensor<fp32, [1, 128, 20, 125]> input_139 = conv(bias = const_56, dilations = input_137_dilations_0, groups = input_137_groups_0, pad = input_137_pad_0, pad_type = input_137_pad_type_0, strides = input_137_strides_0, weight = const_55, x = input_135)[name = tensor<string, []>("input_139")];
            tensor<fp32, [1, 128, 20, 125]> input_141 = relu(x = input_139)[name = tensor<string, []>("input_141")];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_143_strides_0 = const()[name = tensor<string, []>("input_143_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_143_dilations_0 = const()[name = tensor<string, []>("input_143_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_143_groups_0 = const()[name = tensor<string, []>("input_143_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_57 = const()[name = tensor<string, []>("const_57"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12235904)))];
            tensor<fp32, [128]> const_58 = const()[name = tensor<string, []>("const_58"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12825792)))];
            tensor<fp32, [1, 128, 20, 125]> out_21 = conv(bias = const_58, dilations = input_143_dilations_0, groups = input_143_groups_0, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = input_143_strides_0, weight = const_57, x = input_141)[name = tensor<string, []>("out_21")];
            tensor<fp32, [1, 128, 20, 125]> input_145 = add(x = out_21, y = input_135)[name = tensor<string, []>("input_145")];
            tensor<fp32, [1, 128, 20, 125]> input_147 = relu(x = input_145)[name = tensor<string, []>("input_147")];
            tensor<string, []> input_149_pad_type_0 = const()[name = tensor<string, []>("input_149_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_149_pad_0 = const()[name = tensor<string, []>("input_149_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_149_strides_0 = const()[name = tensor<string, []>("input_149_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_149_dilations_0 = const()[name = tensor<string, []>("input_149_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_149_groups_0 = const()[name = tensor<string, []>("input_149_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_59 = const()[name = tensor<string, []>("const_59"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12826368)))];
            tensor<fp32, [128]> const_60 = const()[name = tensor<string, []>("const_60"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13416256)))];
            tensor<fp32, [1, 128, 20, 125]> input_151 = conv(bias = const_60, dilations = input_149_dilations_0, groups = input_149_groups_0, pad = input_149_pad_0, pad_type = input_149_pad_type_0, strides = input_149_strides_0, weight = const_59, x = input_147)[name = tensor<string, []>("input_151")];
            tensor<fp32, [1, 128, 20, 125]> input_153 = relu(x = input_151)[name = tensor<string, []>("input_153")];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_155_strides_0 = const()[name = tensor<string, []>("input_155_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_155_dilations_0 = const()[name = tensor<string, []>("input_155_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_155_groups_0 = const()[name = tensor<string, []>("input_155_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_61 = const()[name = tensor<string, []>("const_61"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13416832)))];
            tensor<fp32, [128]> const_62 = const()[name = tensor<string, []>("const_62"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14006720)))];
            tensor<fp32, [1, 128, 20, 125]> out_23 = conv(bias = const_62, dilations = input_155_dilations_0, groups = input_155_groups_0, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = input_155_strides_0, weight = const_61, x = input_153)[name = tensor<string, []>("out_23")];
            tensor<fp32, [1, 128, 20, 125]> input_157 = add(x = out_23, y = input_147)[name = tensor<string, []>("input_157")];
            tensor<fp32, [1, 128, 20, 125]> input_159 = relu(x = input_157)[name = tensor<string, []>("input_159")];
            tensor<string, []> input_161_pad_type_0 = const()[name = tensor<string, []>("input_161_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_161_pad_0 = const()[name = tensor<string, []>("input_161_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_161_strides_0 = const()[name = tensor<string, []>("input_161_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_161_dilations_0 = const()[name = tensor<string, []>("input_161_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_161_groups_0 = const()[name = tensor<string, []>("input_161_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_63 = const()[name = tensor<string, []>("const_63"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14007296)))];
            tensor<fp32, [128]> const_64 = const()[name = tensor<string, []>("const_64"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14597184)))];
            tensor<fp32, [1, 128, 20, 125]> input_163 = conv(bias = const_64, dilations = input_161_dilations_0, groups = input_161_groups_0, pad = input_161_pad_0, pad_type = input_161_pad_type_0, strides = input_161_strides_0, weight = const_63, x = input_159)[name = tensor<string, []>("input_163")];
            tensor<fp32, [1, 128, 20, 125]> input_165 = relu(x = input_163)[name = tensor<string, []>("input_165")];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_167_strides_0 = const()[name = tensor<string, []>("input_167_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_167_dilations_0 = const()[name = tensor<string, []>("input_167_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_167_groups_0 = const()[name = tensor<string, []>("input_167_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [128, 128, 3, 3]> const_65 = const()[name = tensor<string, []>("const_65"), val = tensor<fp32, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14597760)))];
            tensor<fp32, [128]> const_66 = const()[name = tensor<string, []>("const_66"), val = tensor<fp32, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15187648)))];
            tensor<fp32, [1, 128, 20, 125]> out_25 = conv(bias = const_66, dilations = input_167_dilations_0, groups = input_167_groups_0, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = input_167_strides_0, weight = const_65, x = input_165)[name = tensor<string, []>("out_25")];
            tensor<fp32, [1, 128, 20, 125]> input_169 = add(x = out_25, y = input_159)[name = tensor<string, []>("input_169")];
            tensor<fp32, [1, 128, 20, 125]> input_171 = relu(x = input_169)[name = tensor<string, []>("input_171")];
            tensor<string, []> input_173_pad_type_0 = const()[name = tensor<string, []>("input_173_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_173_pad_0 = const()[name = tensor<string, []>("input_173_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_173_strides_0 = const()[name = tensor<string, []>("input_173_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_173_dilations_0 = const()[name = tensor<string, []>("input_173_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_173_groups_0 = const()[name = tensor<string, []>("input_173_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [256, 128, 3, 3]> const_67 = const()[name = tensor<string, []>("const_67"), val = tensor<fp32, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15188224)))];
            tensor<fp32, [256]> const_68 = const()[name = tensor<string, []>("const_68"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16367936)))];
            tensor<fp32, [1, 256, 10, 63]> input_175 = conv(bias = const_68, dilations = input_173_dilations_0, groups = input_173_groups_0, pad = input_173_pad_0, pad_type = input_173_pad_type_0, strides = input_173_strides_0, weight = const_67, x = input_171)[name = tensor<string, []>("input_175")];
            tensor<fp32, [1, 256, 10, 63]> input_177 = relu(x = input_175)[name = tensor<string, []>("input_177")];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_179_strides_0 = const()[name = tensor<string, []>("input_179_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_179_dilations_0 = const()[name = tensor<string, []>("input_179_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_179_groups_0 = const()[name = tensor<string, []>("input_179_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [256, 256, 3, 3]> const_69 = const()[name = tensor<string, []>("const_69"), val = tensor<fp32, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16369024)))];
            tensor<fp32, [256]> const_70 = const()[name = tensor<string, []>("const_70"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18728384)))];
            tensor<fp32, [1, 256, 10, 63]> out_27 = conv(bias = const_70, dilations = input_179_dilations_0, groups = input_179_groups_0, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = input_179_strides_0, weight = const_69, x = input_177)[name = tensor<string, []>("out_27")];
            tensor<string, []> input_181_pad_type_0 = const()[name = tensor<string, []>("input_181_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_181_strides_0 = const()[name = tensor<string, []>("input_181_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [4]> input_181_pad_0 = const()[name = tensor<string, []>("input_181_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_181_dilations_0 = const()[name = tensor<string, []>("input_181_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_181_groups_0 = const()[name = tensor<string, []>("input_181_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [256, 128, 1, 1]> const_71 = const()[name = tensor<string, []>("const_71"), val = tensor<fp32, [256, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18729472)))];
            tensor<fp32, [256]> const_72 = const()[name = tensor<string, []>("const_72"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18860608)))];
            tensor<fp32, [1, 256, 10, 63]> var_585 = conv(bias = const_72, dilations = input_181_dilations_0, groups = input_181_groups_0, pad = input_181_pad_0, pad_type = input_181_pad_type_0, strides = input_181_strides_0, weight = const_71, x = input_171)[name = tensor<string, []>("op_585")];
            tensor<fp32, [1, 256, 10, 63]> input_183 = add(x = out_27, y = var_585)[name = tensor<string, []>("input_183")];
            tensor<fp32, [1, 256, 10, 63]> input_185 = relu(x = input_183)[name = tensor<string, []>("input_185")];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_187_strides_0 = const()[name = tensor<string, []>("input_187_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_187_dilations_0 = const()[name = tensor<string, []>("input_187_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_187_groups_0 = const()[name = tensor<string, []>("input_187_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [256, 256, 3, 3]> const_73 = const()[name = tensor<string, []>("const_73"), val = tensor<fp32, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18861696)))];
            tensor<fp32, [256]> const_74 = const()[name = tensor<string, []>("const_74"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21221056)))];
            tensor<fp32, [1, 256, 10, 63]> input_189 = conv(bias = const_74, dilations = input_187_dilations_0, groups = input_187_groups_0, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = input_187_strides_0, weight = const_73, x = input_185)[name = tensor<string, []>("input_189")];
            tensor<fp32, [1, 256, 10, 63]> input_191 = relu(x = input_189)[name = tensor<string, []>("input_191")];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_193_strides_0 = const()[name = tensor<string, []>("input_193_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_193_dilations_0 = const()[name = tensor<string, []>("input_193_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_193_groups_0 = const()[name = tensor<string, []>("input_193_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [256, 256, 3, 3]> const_75 = const()[name = tensor<string, []>("const_75"), val = tensor<fp32, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21222144)))];
            tensor<fp32, [256]> const_76 = const()[name = tensor<string, []>("const_76"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23581504)))];
            tensor<fp32, [1, 256, 10, 63]> out_29 = conv(bias = const_76, dilations = input_193_dilations_0, groups = input_193_groups_0, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = input_193_strides_0, weight = const_75, x = input_191)[name = tensor<string, []>("out_29")];
            tensor<fp32, [1, 256, 10, 63]> input_195 = add(x = out_29, y = input_185)[name = tensor<string, []>("input_195")];
            tensor<fp32, [1, 256, 10, 63]> input_197 = relu(x = input_195)[name = tensor<string, []>("input_197")];
            tensor<string, []> input_199_pad_type_0 = const()[name = tensor<string, []>("input_199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_199_pad_0 = const()[name = tensor<string, []>("input_199_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_199_strides_0 = const()[name = tensor<string, []>("input_199_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_199_dilations_0 = const()[name = tensor<string, []>("input_199_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_199_groups_0 = const()[name = tensor<string, []>("input_199_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [256, 256, 3, 3]> const_77 = const()[name = tensor<string, []>("const_77"), val = tensor<fp32, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23582592)))];
            tensor<fp32, [256]> const_78 = const()[name = tensor<string, []>("const_78"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25941952)))];
            tensor<fp32, [1, 256, 10, 63]> input_201 = conv(bias = const_78, dilations = input_199_dilations_0, groups = input_199_groups_0, pad = input_199_pad_0, pad_type = input_199_pad_type_0, strides = input_199_strides_0, weight = const_77, x = input_197)[name = tensor<string, []>("input_201")];
            tensor<fp32, [1, 256, 10, 63]> input_203 = relu(x = input_201)[name = tensor<string, []>("input_203")];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_205_strides_0 = const()[name = tensor<string, []>("input_205_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_205_dilations_0 = const()[name = tensor<string, []>("input_205_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_205_groups_0 = const()[name = tensor<string, []>("input_205_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp32, [256, 256, 3, 3]> const_79 = const()[name = tensor<string, []>("const_79"), val = tensor<fp32, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25943040)))];
            tensor<fp32, [256]> const_80 = const()[name = tensor<string, []>("const_80"), val = tensor<fp32, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28302400)))];
            tensor<fp32, [1, 256, 10, 63]> out = conv(bias = const_80, dilations = input_205_dilations_0, groups = input_205_groups_0, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = input_205_strides_0, weight = const_79, x = input_203)[name = tensor<string, []>("out")];
            tensor<fp32, [1, 256, 10, 63]> input_207 = add(x = out, y = input_197)[name = tensor<string, []>("input_207")];
            tensor<fp32, [1, 256, 10, 63]> features = relu(x = input_207)[name = tensor<string, []>("features")];
            tensor<int32, [3]> var_654 = const()[name = tensor<string, []>("op_654"), val = tensor<int32, [3]>([1, 2560, 63])];
            tensor<fp32, [1, 2560, 63]> sequences = reshape(shape = var_654, x = features)[name = tensor<string, []>("sequences")];
            tensor<int32, [1]> mean_axes_0 = const()[name = tensor<string, []>("mean_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<bool, []> mean_keep_dims_0 = const()[name = tensor<string, []>("mean_keep_dims_0"), val = tensor<bool, []>(false)];
            tensor<fp32, [1, 2560]> mean = reduce_mean(axes = mean_axes_0, keep_dims = mean_keep_dims_0, x = sequences)[name = tensor<string, []>("mean")];
            tensor<int32, [1]> var_658_axes_0 = const()[name = tensor<string, []>("op_658_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp32, [1, 2560, 1]> var_658 = expand_dims(axes = var_658_axes_0, x = mean)[name = tensor<string, []>("op_658")];
            tensor<fp32, [1, 2560, 63]> centered = sub(x = sequences, y = var_658)[name = tensor<string, []>("centered")];
            tensor<fp32, [1, 2560, 63]> var_660 = mul(x = centered, y = centered)[name = tensor<string, []>("op_660")];
            tensor<int32, [1]> sum_sq_axes_0 = const()[name = tensor<string, []>("sum_sq_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<bool, []> sum_sq_keep_dims_0 = const()[name = tensor<string, []>("sum_sq_keep_dims_0"), val = tensor<bool, []>(false)];
            tensor<fp32, [1, 2560]> sum_sq = reduce_sum(axes = sum_sq_axes_0, keep_dims = sum_sq_keep_dims_0, x = var_660)[name = tensor<string, []>("sum_sq")];
            tensor<fp32, [1]> _inversed_var_y_0 = const()[name = tensor<string, []>("_inversed_var_y_0"), val = tensor<fp32, [1]>([0x1.08421p-6])];
            tensor<fp32, [1, 2560]> _inversed_var = mul(x = sum_sq, y = _inversed_var_y_0)[name = tensor<string, []>("_inversed_var")];
            tensor<fp32, []> const_8 = const()[name = tensor<string, []>("const_8"), val = tensor<fp32, []>(0x1.fffffep+127)];
            tensor<fp32, [1, 2560]> clip_1 = clip(alpha = var_93, beta = const_8, x = _inversed_var)[name = tensor<string, []>("clip_1")];
            tensor<fp32, [1, 2560]> std = sqrt(x = clip_1)[name = tensor<string, []>("std")];
            tensor<bool, []> input_interleave_0 = const()[name = tensor<string, []>("input_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp32, [1, 5120]> input = concat(axis = var_90, interleave = input_interleave_0, values = (mean, std))[name = tensor<string, []>("input")];
            tensor<fp32, [1, 256]> embedding = linear(bias = resnet_seg_1_bias, weight = resnet_seg_1_weight, x = input)[name = tensor<string, []>("linear_0")];
        } -> (embedding);
}